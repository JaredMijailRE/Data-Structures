#ifndef MY_HASH_TABLE_H
#define MY_HASH_TABLE_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stddef.h>
#include <stdint.h>

// Alias the mangled type to a clean name.
// (Use the mangled name exactly as generated by Zig.)
typedef struct HashTable_u32_u32__951 HashTable_u32_u32;

// Declare the exported functions with clean names.
HashTable_u32_u32* create_u32_hash_table_default(size_t size);
void destroy_u32_hash_table(HashTable_u32_u32* table);
int32_t insert_u32(HashTable_u32_u32* table, uint32_t key, uint32_t value);
int32_t search_u32(HashTable_u32_u32* table, uint32_t key, uint32_t* result);
int32_t remove_u32(HashTable_u32_u32* table, uint32_t key, uint32_t* result);
int32_t update_u32(HashTable_u32_u32* table, uint32_t key, uint32_t value);

#ifdef __cplusplus
}
#endif

#endif // MY_HASH_TABLE_H
